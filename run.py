#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞-–ø–µ—Å–µ–Ω–Ω–∏–∫–∞
–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import asyncio
import threading
import signal
import sys
import logging
from telegram_bot import main as run_bot
from web_app import app
import config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class MusicBotService:
    def __init__(self):
        self.bot_thread = None
        self.web_thread = None
        self.running = False
    
    def start_web_app(self):
        """–ó–∞–ø—É—Å–∫ Flask –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        logger.info(f"üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ http://{config.FLASK_HOST}:{config.FLASK_PORT}")
        app.run(
            host=config.FLASK_HOST,
            port=config.FLASK_PORT,
            debug=False,
            use_reloader=False,
            threaded=True
        )
    
    def start_telegram_bot(self):
        """–ó–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞"""
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        run_bot()
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
        if not config.BOT_TOKEN:
            logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.")
            logger.error("–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .env —Ñ–∞–π–ª–∞:")
            logger.error("BOT_TOKEN=your_telegram_bot_token_here")
            return
        
        self.running = True
        
        logger.info("üéµ –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞-–ø–µ—Å–µ–Ω–Ω–∏–∫–∞...")
        logger.info("=" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        self.web_thread = threading.Thread(target=self.start_web_app, daemon=True)
        self.web_thread.start()
        
        # –î–∞–µ–º –≤—Ä–µ–º—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        import time
        time.sleep(2)
        
        logger.info("‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        logger.info("=" * 50)
        logger.info(f"üì± Telegram –±–æ—Ç: –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        logger.info(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://{config.FLASK_HOST}:{config.FLASK_PORT}")
        logger.info(f"üìÅ –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫: {config.UPLOAD_FOLDER}")
        logger.info("=" * 50)
        logger.info("üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
        logger.info("1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        logger.info("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É")
        logger.info("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏")
        logger.info("4. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        logger.info("=" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        try:
            self.start_telegram_bot()
        except KeyboardInterrupt:
            self.stop()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
        logger.info("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        self.running = False
        
        logger.info("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(0)

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    logger.info("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    service.stop()

if __name__ == "__main__":
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    service = MusicBotService()
    
    try:
        service.start()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)